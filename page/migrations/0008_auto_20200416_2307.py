# Generated by Django 3.0 on 2020-04-16 23:07

from django.db import migrations, models
import django.db.models.deletion
import spritesanddice.stream_blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('page', '0007_auto_20200416_2254'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('content', wagtail.core.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock()), ('Rich_Text', wagtail.core.blocks.RichTextBlock()), ('Author_Bio', wagtail.core.blocks.StructBlock([('user', spritesanddice.stream_blocks.UserChooserBlock())], icon='fa-user'))], blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogFolder',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='blogpage',
            name='content',
            field=wagtail.core.fields.StreamField([('image', wagtail.images.blocks.ImageChooserBlock()), ('Rich_Text', wagtail.core.blocks.RichTextBlock()), ('Podcast', wagtail.core.blocks.StructBlock([('podcast', wagtail.snippets.blocks.SnippetChooserBlock('podcast.Podcast'))], icon='fa-headphones')), ('Review_Info', wagtail.core.blocks.StructBlock([('game', wagtail.snippets.blocks.SnippetChooserBlock('game.Game'))], icon='fa-pencil'))], blank=True),
        ),
    ]
